version: '3.3'

services:
  mongodb:
    image: mongo:5.0.2
    env_file: ./.env
    environment:
      # - MONGO_INITDB_ROOT_USERNAME = $MONGODB_USER
      # - MONGO_INITDB_ROOT_PASSWORD = $MONGODB_PASSWORD
      - MONGO_INITDB_ROOT_USERNAME = tuanvu
      - MONGO_INITDB_ROOT_PASSWORD = 123456
      - MONGO_INITDB_DATABASE= ${MONGODB_DATABASE}
    ports:
      - ${MONGODB_LOCAL_PORT}:${MONGODB_DOCKER_PORT}
      # - 27018:27017
    # volumes:
    #   - .data: /var/lib/mongo
    networks:
      - app

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # env_file: 
    #   - ./backend/config/.desktop-env
    ports:
      # - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
      - 8000:8000
    volumes:
      - ./backend:/app/backend
    environment:
      - DB_HOST=mongodb
      - DB_USER=tuanvu
      - DB_PASSWORD=123456
      # - DB_NAME=$MONGODB_DATABASE
      # - DB_PORT=$MONGODB_DOCKER_PORT
      - DB_NAME=todo_db
      - DB_PORT=27017
    depends_on:
      - mongodb
    networks:
      - app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # env_file: 
    #   - ./frontend/.env
    ports: 
      # - $REACT_LOCAL_PORT:$REACT_DOCKER_PORT
      - 3000:3000
    volumes: 
      - ./frontend:/app/frontend
    depends_on:
      - backend
    networks: 
      - app

networks:
  app:
    driver: bridge 

# 1. Run and test/make migrate with a running container:     
# docker exec -it <container_id with docker ps> sh

# 2. Volume: (Real folder):(Virtual folder) --> Purpose: Backup data

# 3. Build container from Dockerfile instead of pure image(s): 
# build:
#   context: ./backend
#   dockerfile: Dockerfile

# 4.  