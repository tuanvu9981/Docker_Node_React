version: '3.3'

services:
  mongo_db:
    image: mongo:5.0.2
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE_NAME}
    ports:
      - ${MONGODB_LOCAL_PORT}:${MONGODB_DOCKER_PORT}
    # volumes:
    #   - .data: /var/lib/mongo
    networks:
      - app

  backend1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    # volumes:
    #   - ./backend:/app/backend1
    environment:
      - DB_HOST=mongodb
      - DB_USER=${MONGODB_USER}
      - DB_PASSWORD=${MONGODB_PASSWORD}
      - DB_NAME=${MONGODB_DATABASE_NAME}
      - DB_PORT=${MONGODB_DOCKER_PORT}
    depends_on:
      - mongo_db
    networks:
      - app

  frontend1:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: ./.env
    ports: 
      - ${REACT_LOCAL_PORT}:${REACT_DOCKER_PORT}
    # volumes: 
    #   - ./frontend:/app/frontend1
    depends_on:
      - backend1
    networks: 
      - app

networks:
  app:
    driver: bridge 

# 1. Run and test/make migrate with a running container:     
# docker exec -it <container_id with docker ps> sh

# 2. Volume: (Real folder):(Virtual folder) --> Purpose: Backup data

# 3. Build container from Dockerfile instead of pure image(s): 
# build:
#   context: ./backend1
#   dockerfile: Dockerfile

# 4.  